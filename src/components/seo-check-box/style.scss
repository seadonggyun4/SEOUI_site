@use '../styles/constants/colors' as colors;
@use './checkbox' as checkbox;

.checkbox-container {
  display: inline-grid;
  grid-auto-flow: column;
  align-items: center;
  column-gap: checkbox.$checkbox-gap;
  height: 100%;
  cursor: pointer;
  position: relative;

  .styled-checkbox {
    position: relative;
    width: checkbox.$checkbox-size;
    height: checkbox.$checkbox-size;
    border: 1px solid colors.pick(gray, 5);
    background-color: #ffffff;
    border-radius: checkbox.$checkbox-border-radius;
    cursor: pointer;
    transition: border-color checkbox.$checkbox-transition-duration checkbox.$checkbox-transition-easing;

    svg {
      width: 100%;
      height: 100%;
      transform: scale(0);
      fill: none;
      stroke-linecap: round;
      stroke-linejoin: round;

      polyline {
        stroke-width: checkbox.$checkbox-checkmark-stroke-width;
        stroke: white;
      }
    }

    &:after {
      content: "";
      position: absolute;
      top: 50%;
      left: 50%;
      width: checkbox.$checkbox-ripple-size;
      height: checkbox.$checkbox-ripple-size;
      border-radius: checkbox.$checkbox-ripple-size;
      box-shadow:
        #{nth(checkbox.$checkbox-ripple-positions, 1)} colors.$secondary-color,
        #{nth(checkbox.$checkbox-ripple-positions, 2)} colors.$secondary-color,
        #{nth(checkbox.$checkbox-ripple-positions, 3)} colors.$secondary-color,
        #{nth(checkbox.$checkbox-ripple-positions, 4)} colors.$secondary-color,
        #{nth(checkbox.$checkbox-ripple-positions, 5)} colors.$secondary-color,
        #{nth(checkbox.$checkbox-ripple-positions, 6)} colors.$secondary-color,
        #{nth(checkbox.$checkbox-ripple-positions, 7)} colors.$secondary-color,
        #{nth(checkbox.$checkbox-ripple-positions, 8)} colors.$secondary-color;
      transform: translate(-50%, -50%) scale(0);
      transition: all checkbox.$checkbox-ripple-animation-duration checkbox.$checkbox-transition-easing;
    }
  }

  .label-text {
    position: relative;
    cursor: pointer;
    white-space: nowrap;
    transition: color checkbox.$checkbox-transition-duration checkbox.$checkbox-transition-easing;

    &:after {
      content: "";
      position: absolute;
      bottom: checkbox.$checkbox-label-underline-bottom;
      left: 0;
      width: 0;
      height: checkbox.$checkbox-label-underline-height;
      background: colors.$secondary-color;
    }
  }

  &.is-disabled {
    cursor: not-allowed;
    opacity: checkbox.$checkbox-disabled-opacity;
    pointer-events: none;
  }

  input { display: none; }

  input[type='checkbox']:checked + .styled-checkbox {
    border-color: transparent;
    background-color: colors.$secondary-color;

    svg {
      transform: scale(checkbox.$checkbox-checkmark-scale);
      transition: all checkbox.$checkbox-check-animation-duration checkbox.$checkbox-transition-easing checkbox.$checkbox-check-animation-delay;
    }

    &:after {
      transform: translate(-50%, -50%) scale(1);
      opacity: 0;
      transition: all checkbox.$checkbox-ripple-animation-delay checkbox.$checkbox-transition-easing;
    }
  }

  input[type='checkbox']:checked ~ .label-text {
    color: colors.$secondary-color;

    &:after {
      width: 100%;
      transition: all checkbox.$checkbox-label-underline-duration checkbox.$checkbox-transition-easing;
    }
  }
}