@use '@/styles/constants/colors' as colors;
@use '@/styles/constants/breakpoint' as breakpoint;
@use './style-color' as doc-colors;

.docs {
  border: 1px solid colors.$border-color;
  overflow: hidden;
  transition: all 0.3s ease;

  summary {
    padding: 0.3em 0.5em;
    height: 3.5rem;
    border-bottom: 1px solid colors.$border-color;
    background-color: colors.$summary-bg;
    display: flex;
    align-items: center;
    justify-content: space-between;
    cursor: pointer;
    font-weight: 500;
    transition: background-color 0.2s ease;

    .indicator-group{
      display: flex;
      align-items: center;
      gap: 1rem;
    }

    .component-indicator {
      margin-left: 0.5rem;

      .fas {
        color: doc-colors.$component-success;
        animation: component-pulse 1.5s infinite;
      }

      &:hover {
        .fas {
          color: doc-colors.$component-success-hover;
        }
      }
    }

    .toggle-indicator {
      margin-left: 0.5rem;
      display: flex;
      align-items: center;
      transition: transform 0.3s ease;

      .hamburger-icon {
        width: 16px;
        height: 12px;
        position: relative;
        cursor: pointer;
        
        span {
          display: block;
          position: absolute;
          height: 2px;
          width: 100%;
          background: colors.$primary-color;
          border-radius: 1px;
          opacity: 1;
          left: 0;
          transform: rotate(0deg);
          transition: all 0.25s ease-in-out;
          animation: hamburger-pulse 2s infinite;

          &:nth-child(1) {
            top: 0px;
          }

          &:nth-child(2) {
            top: 5px;
          }

          &:nth-child(3) {
            top: 10px;
          }
        }

        &:hover span {
          background: lighten(colors.$primary-color, 10%);
          animation-duration: 1s;
        }
      }
    }
  }

  .docs-content {
    display: grid;
    gap: 3rem;
    padding: 1rem;
    overflow-x: auto;
  }

  .doc-description {
    line-height: 2;
    color: colors.$font-color;

    strong {
      font-weight: 600;
    }

    code {
      background-color: colors.$badge-bg;
      color: colors.$badge-color;
      border-radius: 3px;
      padding: 0.2em 0.3em;
      font-size: 90%;
    }

    ul {
      line-height: 2.3;
      list-style: disc;
      margin-left: 2rem;
    }

    ol {
      list-style: auto;
      margin-left: 1rem;
    }
  }

  .doc-components {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    align-items: end;
    width: 100%;
  }

  .doc-code {
    pre.shiki {
      padding: 1rem;
      line-height: 2;
    }
  }

  // 스켈레톤 로더들
  .description-skeleton,
  .components-skeleton,
  .code-skeleton {
    .skeleton-line,
    .skeleton-button,
    .skeleton-code-line,
    .skeleton-lang-tag,
    .skeleton-copy-btn,
    .skeleton-component {
      background: linear-gradient(90deg, doc-colors.$skeleton-light 25%, doc-colors.$skeleton-mid 50%, doc-colors.$skeleton-light 75%);
      background-size: 200% 100%;
      animation: skeleton-loading 1.5s infinite;
      border-radius: 4px;
    }
  }

  .description-skeleton {
    .skeleton-line {
      height: 16px;
      margin-bottom: 8px;

      &.long { width: 100%; }
      &.medium { width: 75%; }
      &.short { width: 50%; }
    }
  }

  .components-skeleton {
    .skeleton-components {
      display: flex;
      gap: 12px;
      margin-bottom: 12px;

      .skeleton-button {
        width: 100px;
        height: 36px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: doc-colors.$skeleton-bg;
        border: 1px solid doc-colors.$skeleton-border;

        .fas {
          color: doc-colors.$skeleton-text;
        }
      }

      .skeleton-component {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        gap: 6px;
        padding: 12px 16px;
        background: doc-colors.$skeleton-bg;
        border: 1px solid doc-colors.$skeleton-border;
        border-radius: 6px;
        min-width: 120px;
        position: relative;

        .fas {
          color: doc-colors.$component-success;
          font-size: 16px;
        }

        .component-name {
          font-size: 12px;
          color: doc-colors.$skeleton-text;
          font-weight: 500;
          text-align: center;
          max-width: 100px;
          word-break: break-word;
        }

        &::after {
          content: '';
          position: absolute;
          top: 0;
          left: 0;
          right: 0;
          bottom: 0;
          background: linear-gradient(
            90deg,
            transparent 0%,
            doc-colors.$component-loading-bg 50%,
            transparent 100%
          );
          animation: component-loading-sweep 2s infinite;
          border-radius: 6px;
        }
      }
    }

    .loading-text {
      color: doc-colors.$skeleton-text;
      font-size: 14px;
      font-style: italic;
      display: flex;
      align-items: center;
      gap: 8px;

      .fas {
        color: doc-colors.$component-success;
        animation: spin 1s linear infinite;
      }
    }
  }

  .code-skeleton {
    .skeleton-code-header {
      display: flex;
      justify-content: space-between;
      margin-bottom: 12px;

      .skeleton-lang-tag,
      .skeleton-copy-btn {
        display: flex;
        align-items: center;
        gap: 4px;
        padding: 4px 8px;
        background: doc-colors.$skeleton-bg;
        border-radius: 4px;

        .fas {
          color: doc-colors.$skeleton-text;
        }
      }

      .skeleton-lang-tag {
        width: 60px;
        height: 24px;
      }

      .skeleton-copy-btn {
        width: 40px;
        height: 24px;
      }
    }

    .skeleton-code-lines {
      margin-bottom: 12px;

      .skeleton-code-line {
        height: 20px;
        margin-bottom: 6px;

        &.long { width: 90%; }
        &.medium { width: 65%; }
        &.short { width: 40%; }
      }
    }

    .loading-text {
      display: flex;
      align-items: center;
      gap: 8px;
      color: doc-colors.$skeleton-text;
      font-size: 14px;
      font-style: italic;

      .fas {
        color: doc-colors.$code-primary;
      }
    }
  }

  // 로드된 콘텐츠 애니메이션
  .loaded {
    animation: fade-in 0.5s ease-in;
  }

  // 에러 상태들
  .description-error,
  .code-error,
  .components-error {
    padding: 2rem;
    background: doc-colors.$error-bg-light;
    color: doc-colors.$error-text;
    border-radius: 6px;
    border-left: 5px solid doc-colors.$error-border;
    display: flex;
    align-items: flex-start;
    gap: 1rem;

    .error-icon {
      color: doc-colors.$error-icon;
      font-size: 18px;
      margin-top: 2px;
      flex-shrink: 0;
    }

    .error-content {
      flex: 1;

      strong {
        display: block;
        margin-bottom: 4px;
        font-weight: 600;
      }

      .error-message {
        display: block;
        font-size: 14px;
        margin-bottom: 12px;
        opacity: 0.8;
        line-height: 1.4;
      }
    }

    .error-actions {
      display: flex;
      gap: 8px;
      margin-top: 8px;
      flex-wrap: wrap;
    }

    .retry-button,
    .raw-code-button,
    .skip-button {
      display: flex;
      align-items: center;
      gap: 4px;
      padding: 6px 12px;
      background: doc-colors.$error-btn;
      color: white;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      font-size: 12px;
      transition: all 0.2s ease;
      white-space: nowrap;

      .fas {
        font-size: 11px;
      }

      &:hover {
        background: doc-colors.$error-btn-hover;
        transform: translateY(-1px);
        box-shadow: 0 2px 4px rgba(220, 53, 69, 0.3);
      }
    }

    .raw-code-button {
      background: doc-colors.$btn-raw-code;

      &:hover {
        background: doc-colors.$btn-raw-code-hover;
        box-shadow: 0 2px 4px rgba(108, 117, 125, 0.3);
      }
    }

    .skip-button {
      background: doc-colors.$btn-skip;
      color: doc-colors.$btn-skip-text;

      &:hover {
        background: doc-colors.$btn-skip-hover;
        box-shadow: 0 2px 4px rgba(255, 193, 7, 0.3);
      }
    }
  }

  // 컴포넌트 에러만의 특별한 스타일
  .components-error {
    background: doc-colors.$warning-bg;
    color: doc-colors.$warning-text;
    border-color: doc-colors.$warning-border;

    .error-icon {
      color: doc-colors.$warning-icon;
    }

    .retry-button {
      background: doc-colors.$warning-btn;

      &:hover {
        background: doc-colors.$warning-btn-hover;
        box-shadow: 0 2px 4px rgba(243, 156, 18, 0.3);
      }
    }
  }

  // 코드 헤더
  .code-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 8px 12px;
    background: doc-colors.$code-header-bg;
    border-radius: 6px 6px 0 0;

    .language-tag {
      display: flex;
      align-items: center;
      gap: 4px;
      color: doc-colors.$code-lang-text;
      font-size: 12px;
      font-weight: 600;

      .fas {
        font-size: 10px;
      }
    }

    .copy-button {
      display: flex;
      align-items: center;
      gap: 4px;
      background: doc-colors.$code-copy-bg;
      color: doc-colors.$code-copy-text;
      border: none;
      padding: 4px 8px;
      border-radius: 4px;
      cursor: pointer;
      font-size: 12px;
      transition: all 0.2s ease;

      &:hover {
        background: doc-colors.$code-copy-hover;
        transform: translateY(-1px);
        box-shadow: 0 2px 4px rgba(94, 129, 172, 0.3);
      }

      .fas {
        font-size: 10px;
      }
    }
  }

  // 원본 코드 표시용
  .raw-code {
    background: doc-colors.$raw-code-bg;
    padding: 1rem;
    border-radius: 6px;
    border: 1px solid doc-colors.$raw-code-border;
    font-family: 'Courier New', monospace;
    line-height: 1.5;
    white-space: pre-wrap;
    word-wrap: break-word;
    max-height: 400px;
    overflow-y: auto;

    &::-webkit-scrollbar {
      width: 8px;
    }

    &::-webkit-scrollbar-track {
      background: doc-colors.$raw-scrollbar-track;
      border-radius: 4px;
    }

    &::-webkit-scrollbar-thumb {
      background: doc-colors.$raw-scrollbar-thumb;
      border-radius: 4px;

      &:hover {
        background: doc-colors.$raw-scrollbar-thumb-hover;
      }
    }
  }

  // 섹션이 닫힌 상태일 때 플러스(+) 모양 변환 (기본 상태)
  &:not([open]) {
    .toggle-indicator {
      .hamburger-icon {
        span {
          &:nth-child(1) {
            top: 5px;
            transform: rotate(90deg);
          }

          &:nth-child(2) {
            top: 5px;
            transform: rotate(0deg);
            opacity: 1;
          }

          &:nth-child(3) {
            top: 5px;
            transform: rotate(0deg);
            opacity: 0;
          }
        }
      }
    }
  }
}

// 다크모드 지원
body.dark {
  .docs {
    border-color: colors.$border-color-dark;

    summary {
      border-bottom-color: colors.$border-color-dark;
      background-color: colors.$summary-bg-dark;
    }

    .doc-description {
      color: colors.$font-color-dark;

      code {
        background-color: colors.$badge-bg-dark;
        color: colors.$badge-color;
      }
    }

    // 스켈레톤 다크모드
    .description-skeleton,
    .components-skeleton,
    .code-skeleton {
      .skeleton-line,
      .skeleton-button,
      .skeleton-code-line,
      .skeleton-lang-tag,
      .skeleton-copy-btn,
      .skeleton-component {
        background: linear-gradient(90deg, doc-colors.$skeleton-light-dark 25%, doc-colors.$skeleton-mid-dark 50%, doc-colors.$skeleton-light-dark 75%);
      }
    }

    .components-skeleton {
      .skeleton-components {
        .skeleton-button,
        .skeleton-component {
          background: doc-colors.$skeleton-bg-dark;
          border-color: doc-colors.$skeleton-border-dark;

          .fas {
            color: doc-colors.$skeleton-text-dark;
          }
        }

        .skeleton-component .component-name {
          color: doc-colors.$skeleton-text-dark;
        }
      }

      .loading-text {
        color: doc-colors.$skeleton-text-dark;
      }
    }

    .code-skeleton {
      .skeleton-code-header {
        .skeleton-lang-tag,
        .skeleton-copy-btn {
          background: doc-colors.$skeleton-bg-dark;

          .fas {
            color: doc-colors.$skeleton-text-dark;
          }
        }
      }

      .loading-text {
        color: doc-colors.$skeleton-text-dark;
      }
    }

    // 에러 상태 다크모드
    .description-error,
    .code-error {
      background: doc-colors.$error-bg-light-dark;
      color: doc-colors.$error-text-dark;
      border-left-color: doc-colors.$error-border-dark;
    }

    .components-error {
      background: doc-colors.$warning-bg-dark;
      color: doc-colors.$warning-text-dark;
      border-left-color: doc-colors.$warning-border-dark;
    }

    // 버튼 다크모드
    .raw-code-button {
      background: doc-colors.$btn-raw-code-dark;

      &:hover {
        background: doc-colors.$btn-raw-code-hover-dark;
      }
    }

    .skip-button {
      color: doc-colors.$btn-skip-text-dark;
    }

    // 원본 코드 다크모드
    .raw-code {
      background: doc-colors.$raw-code-bg-dark;
      border-color: doc-colors.$raw-code-border-dark;

      &::-webkit-scrollbar-track {
        background: doc-colors.$raw-scrollbar-track-dark;
      }

      &::-webkit-scrollbar-thumb {
        background: doc-colors.$raw-scrollbar-thumb-dark;

        &:hover {
          background: doc-colors.$raw-scrollbar-thumb-hover-dark;
        }
      }
    }
  }
}

// 애니메이션 정의들
@keyframes pulse {
  0%, 100% { opacity: 0.5; }
  50% { opacity: 1; }
}

@keyframes component-pulse {
  0%, 100% {
    opacity: 0.6;
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(1.1);
  }
}

@keyframes hamburger-pulse {
  0%, 100% {
    opacity: 0.7;
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(1.05);
  }
}

@keyframes skeleton-loading {
  0% { background-position: 200% 0; }
  100% { background-position: -200% 0; }
}

@keyframes component-loading-sweep {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

@keyframes fade-in {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

@media (max-width: breakpoint.$breakpoint) {
  .docs {
    .doc-components {
      align-items: flex-start;
      flex-direction: column;
    }
  }
}
